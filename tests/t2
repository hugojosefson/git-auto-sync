#!/bin/sh

export D=$(pwd)/test-temp
export PATH=$(cd ..; pwd):$(pwd):$PATH

. test-utils

set -e

daemon_port=39418

start_daemon () {
    mkdir -p $D
    cd $D
    git daemon --verbose --export-all --base-path=$D --reuseaddr --pid-file=git-daemon.pid --listen=127.0.0.1 --port=$daemon_port --enable=receive-pack --detach
}

stop_daemon () {
    mkdir -p $D
    cd $D
    xargs kill < git-daemon.pid || true
    rm git-daemon.pid || true
}

init1 () {
    mkdir -p $D
    cd $D
    echo $1 > npeers
    npeers=$(cat npeers)
    collabs=$(seq $npeers)
    for i in $collabs; do
        rm -rf $D/r$i || true
    done
    for i in $collabs; do
        mkdir -p $D/r$i
        cd $D/r$i
        git init
        git config user.name u$i
        git config user.email u$i@domain
        git-auto-sync init r$i-master $(peers $i 'echo git://127.0.0.1:$daemon_port/r$j') || true
        if [ "$i" = "1" ]; then
            touch 1st
            git add 1st
            git commit -m '1st'
        fi
    done
}

run1 () {
    mkdir -p $D
    cd $D
    npeers=$(cat npeers)
    collabs=$(seq $npeers)

    echo '--- u1 adds rnd1'
    cd $D/r1; random_file rnd1
    peers - 'cd $D/r$j; git-auto-sync once'
    peers - 'cd $D/r$j; git-auto-sync once'
    cd $D/r2; git_log
    diff $D/r1/rnd1 $D/r2/rnd1

    echo '--- u2 changes rnd1'
    cd $D/r2; random_file rnd1
    peers - 'cd $D/r$j; git-auto-sync once'
    peers - 'cd $D/r$j; git-auto-sync once'
    cd $D/r1; git_log
    diff $D/r1/rnd1 $D/r2/rnd1

    echo '--- u1 and u2 changes rnd1'
    cd $D/r1; random_file rnd1; cp rnd1 ../rnd1.r1-master
    cd $D/r2; random_file rnd1; cp rnd1 ../rnd1.r2-master
    peers - 'cd $D/r$j; git-auto-sync once'
    peers - 'cd $D/r$j; git-auto-sync once'
    cd $D/r1; git_log
    diff $D/r2/rnd1.r1-master $D/rnd1.r1-master
    diff $D/r2/rnd1.r2-master $D/rnd1.r2-master

    echo test passed.
}

init2 () {
    mkdir -p $D
    cd $D
    echo $1 > npeers
    npeers=$(cat npeers)
    collabs=$(seq $npeers)
    for i in $collabs; do
        rm -rf $D/r$i || true
    done
    for i in $collabs; do
        mkdir -p $D/r$i
        cd $D/r$i
        git init
        git config user.name u$i
        git config user.email u$i@domain
        git-auto-sync init r$i-master \
            git://127.0.0.1:$daemon_port/r$((i+1)) \
            git://127.0.0.1:$daemon_port/r$((i-1)) \
            || true
        if [ "$i" = "1" ]; then
            touch 1st
            git add 1st
            git commit -m '1st'
        fi
    done
}

run2 () {
    mkdir -p $D
    cd $D
    npeers=$(cat npeers)
    collabs=$(seq $npeers)

    echo '--- u1 adds rnd1'
    cd $D/r1; random_file rnd1
    for i in $(seq 2); do peers - 'cd $D/r$j; git-auto-sync once'; done
    cd $D/r$npeers; git_log
    diff $D/r1/rnd1 $D/r$npeers/rnd1

    echo test passed.
}

run3 () {
    mkdir -p $D
    cd $D
    npeers=$(cat npeers)
    collabs=$(seq $npeers)

    echo '--- u1 adds huge rnd1'
    cd $D/r1; random_file rnd1 100000
    t () {
        for i in $(seq 2); do peers - 'cd $D/r$j; git-auto-sync once'; done
    }; time t
    cd $D/r$npeers; git_log
    diff $D/r1/rnd1 $D/r$npeers/rnd1

    echo '--- u1 appends small data to end of rnd1'
    cd $D/r1; date >> rnd1
    t () {
        for i in $(seq 2); do peers - 'cd $D/r$j; git-auto-sync once'; done
    }; time t
    cd $D/r$npeers; git_log
    diff $D/r1/rnd1 $D/r$npeers/rnd1

    echo test passed.
}

test_runner() {
    local olddir=$(pwd)
    start_daemon
    eval "$*" || true
    stop_daemon
    cd $olddir
}

test1 () { test_runner '{ init1 2 && run1; }'; }
test2 () { test_runner '{ init2 5 && run2; }'; }
test3 () { test_runner '{ init1 2 && run3; }'; }

eval "$*"
